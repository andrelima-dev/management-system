services:
  postgres:
    image: postgres:16-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: tasks
      POSTGRES_USER: jungle
      POSTGRES_PASSWORD: jungle_pass
    ports:
      - '5432:5432'
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U jungle"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3.12-management
    restart: unless-stopped
    environment:
      RABBITMQ_DEFAULT_USER: jungle
      RABBITMQ_DEFAULT_PASS: jungle_pass
    ports:
      - '5672:5672'
      - '15672:15672'
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  api-gateway:
    build:
      context: .
      dockerfile: apps/api-gateway/Dockerfile
      target: development
    env_file: apps/api-gateway/.env
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      auth-service:
        condition: service_started
      tasks-service:
        condition: service_started
      notifications-service:
        condition: service_started
    ports:
      - '3000:3000'
    volumes:
      - /repo/node_modules
      - /repo/apps/api-gateway/node_modules
    mem_limit: 4g

  auth-service:
    build:
      context: .
      dockerfile: apps/auth-service/Dockerfile
      target: development
    env_file: apps/auth-service/.env
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    ports:
      - '3001:3001'
    volumes:
      - /repo/node_modules
      - /repo/apps/auth-service/node_modules
    mem_limit: 4g

  tasks-service:
    build:
      context: .
      dockerfile: apps/tasks-service/Dockerfile
      target: development
    env_file: apps/tasks-service/.env
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    ports:
      - '3002:3002'
    volumes:
      - /repo/node_modules
      - /repo/apps/tasks-service/node_modules
    mem_limit: 4g

  notifications-service:
    build:
      context: .
      dockerfile: apps/notifications-service/Dockerfile
      target: development
    env_file: apps/notifications-service/.env
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    ports:
      - '3003:3003'
    volumes:
      - /repo/node_modules
      - /repo/apps/notifications-service/node_modules

  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
      target: development
    env_file: apps/web/.env
    depends_on:
      - api-gateway
    ports:
      - '5173:5173'

volumes:
  pgdata:
